@model List<hypster_tv_DAL.sp_Compatibility_CompCheck_Result_Ex>
@{
    Layout = null;
}





<div class="mcPlstwSong" style="overflow-x:hidden;">


        <div class="mcheader">
            &nbsp;&nbsp;Playlists with this song
        </div>



        <div class="MPLPlstsCont" style=" min-height:625px;">
        @for (int i = 0; i < Model.Count; i++)
        {
            if (i < Model.Count && Model[i].playlist_id.ToString() != ViewBag.playlist_id)
            {
                <div class="PlstItm" onclick="window.location='/listen/playlists/@(Model[i].username)?@(Model[i].playlist_id)&rtg=19873';" onmouseover="DispPlstMyLikeDetails(this, @Model[i].playlist_id, @Model[i].userid);" onmouseout="HidePlstMyLikeDetails(event, this);" >
                    <div class="PlstTitle">@Model[i].name</div>
                    <a class="PlstLstn" title="play"></a>
                    <a class="PlstViews" title="@Model[i].ViewsNum views">@hypster.Controllers.helpers.PlaylistHelper.DisplayViews(Model[i].ViewsNum)</a>
                    <a class="PlstLikes" title="@Model[i].Likes likes">@hypster.Controllers.helpers.PlaylistHelper.DisplayViews(Model[i].Likes)</a>
                </div>
            }

            if (i > 100)
            {
                break;
            }
        }
        </div>


        <div id="PMYLIKE_PlstPreview">
            <div class="LdingPrev"></div>
        </div>


</div>







<div class="mcWikiCH" style="overflow-x:hidden;">


    <div id="queryTerm"></div>


    <script type="text/javascript">

        $(document).ready(function () {

            var title = '@ViewBag.song_artist';

            if ($(window).height() < 710) {
                var h_diff = 710 - $(window).height();
                $(".mcPlstwSong").css("height", ($(".mcPlstwSong").height() - h_diff) + "px");
                $(".mcWikiCH").css("height", ($(".mcWikiCH").height() - h_diff) + "px");
                $(".mcBackBtn").css("height", ($(".mcBackBtn").height() - h_diff) + "px");
                $(".mcAddContH").css("height", ($(".mcAddContH").height() - h_diff) + "px");
            }


            try
            {
                //Get Leading paragraphs (section 0)
                $.getJSON("http://en.wikipedia.org/w/api.php?action=parse&page=" + encodeURIComponent(title) + "&prop=text&section=0&format=json&callback=?", function (data) {
                    if (data.parse != undefined)
                    {
                        for (text in data.parse.text) {
                            var text = data.parse.text[text].split("<p>");
                            var pText = "";

                            for (p in text) {
                                //Remove html comment
                                text[p] = text[p].split("<!--");
                                if (text[p].length > 1) {
                                    text[p][0] = text[p][0].split(/\r\n|\r|\n/);
                                    text[p][0] = text[p][0][0];
                                    text[p][0] += "</p> ";
                                }
                                text[p] = text[p][0];

                                //Construct a string from paragraphs
                                if (text[p].indexOf("</p>") == text[p].length - 5) {

                                    var htmlStrip = replaceAll("href=\"", " target='blank' href=\"http://wikipedia.org/", text[p]);

                                    var splitNewline = htmlStrip.split(/\r\n|\r|\n/); //Split on newlines
                                    for (newline in splitNewline) {
                                        if (splitNewline[newline].substring(0, 11) != "Cite error:") {
                                            pText += splitNewline[newline];
                                            pText += "\n";
                                        }
                                    }
                                }
                            }
                            pText = pText.substring(0, pText.length - 2); //Remove extra newline
                            pText = pText.replace(/\[\d+\]/g, ""); //Remove reference tags (e.x. [1], [4], etc)

                            if (pText.length > 400) {
                                document.getElementById('queryTerm').innerHTML = "&nbsp;&nbsp;" + pText;
                                //document.getElementById('content').innerHTML = "<img alt='' src='/imgs/visualSearch/" + trim1(title) + ".jpg' style='float:left; margin:5px 10px 0 0;' />" + pText + "<br/><a href='http://en.wikipedia.org/wiki/" + trim1(title) + "' target='blank'>Wikipedia</a>"
                                document.getElementById('content').innerHTML = pText + "<br/><a href='http://en.wikipedia.org/wiki/" + trim1(title) + "' target='blank'>Wikipedia</a>"
                            }
                        }
                    }
                });

            }catch(ex){}

        });
    </script>


    <div id="content"></div>


</div>





<div class="mcBackBtn" onclick="ScrollContF2(this);">
    <
</div>




<div class="mcAddContH" style="overflow-x:hidden;">
    
    <div style=" min-height:625px;"></div>

</div>





