@model hypster.ViewModels.videoPlayerViewModel
@{
    Layout = null;
    int song_limit = Int32.Parse(System.Configuration.ConfigurationManager.AppSettings["Song_LIMIT"]);

    Layout = "/Areas/black/Views/Shared/_srLayout.cshtml";
}






<script type="text/javascript">

    var CURR_ACTIVE_MENU = 0;
    var MENU_COUNT = @Model.songs_list.Count;

    var CURR_ACTION = "";
    var LOCK_SOUND = false;

    var skip_items_arr = new Array();


    function HandleKeyAction(e) {
        
        if (is_speech_sound == 1) {
            window.speechSynthesis.cancel();
        }


        var KEY_CODE = 0;

        if (window.event) {
            KEY_CODE = window.event.keyCode;
        }
        else {
            KEY_CODE = e.which;
        }


        //alert(KEY_CODE);




        //ESC
        if (KEY_CODE == 27) {
            clickBack();
        }



        //enter
        if (KEY_CODE == 13) {
            
            var isExecuted = false;
            isExecuted = HandleCurrAction();



            if(isExecuted == false)
            {
                //choose current song
                plVClick(items_arr[CURR_ACTIVE_MENU], CURR_ACTIVE_MENU);
            }
        }



        //space
        if (KEY_CODE == 32) {

            //play/pause
            //
            PlayPauseVideo();
        }



        //add to my playlist
        if (KEY_CODE == 49) {
            
            AddToMyPlaylist();

        }


        //remove to my playlist
        if (KEY_CODE == 50) {
            
            DeleteFromMyPlaylist();

        }







        //down
        if (KEY_CODE == 40) {
            //move menu down

            CURR_ACTIVE_MENU += 1;
            if (CURR_ACTIVE_MENU > MENU_COUNT) {
                CURR_ACTIVE_MENU = MENU_COUNT;
            }


            //check if no removed or skiped
            var is_removed = "";
            for (var j = 0; j < skip_items_arr.length; j++) {
                if (skip_items_arr[j] == CURR_ACTIVE_MENU) {
                    is_removed = " removed";    
                }
            }


            if(is_removed == "")
            {
                //lower player sound
                player.setVolume(20); //will need to bring back
            
                if (is_speech_sound == 1) {
                    var curr_msg = new SpeechSynthesisUtterance($("#songC_" + CURR_ACTIVE_MENU).html());
                    window.speechSynthesis.speak(curr_msg);
                }


                $(".playlistItemC").css("background-color", "#292929");
                $("#PlItem_" + CURR_ACTIVE_MENU).css("background-color", "#494949");
            }
            else
            {
                if (is_speech_sound == 1) {
                    var curr_msg_removed = new SpeechSynthesisUtterance("removed");
                    window.speechSynthesis.speak(curr_msg_removed);
                }
            }
            
        }


        //up
        if (KEY_CODE == 38) {
            //move menu up

            CURR_ACTIVE_MENU -= 1;
            if (CURR_ACTIVE_MENU < 0) {
                CURR_ACTIVE_MENU = 0;
            }


            //check if no removed or skiped
            var is_removed = "";
            for (var j = 0; j < skip_items_arr.length; j++) {
                if (skip_items_arr[j] == CURR_ACTIVE_MENU) {
                    is_removed = " removed";    
                }
            }


            if(is_removed == "")
            {
                //lower player sound
                player.setVolume(20); //will need to bring back


                if (is_speech_sound == 1) {
                    var curr_msg = new SpeechSynthesisUtterance($("#songC_" + CURR_ACTIVE_MENU).html());
                    window.speechSynthesis.speak(curr_msg);
                }


                $(".playlistItemC").css("background-color", "#292929");
                $("#PlItem_" + CURR_ACTIVE_MENU).css("background-color", "#494949");
            }
            else
            {
                if (is_speech_sound == 1) {
                    var curr_msg_removed = new SpeechSynthesisUtterance("removed");
                    window.speechSynthesis.speak(curr_msg_removed);
                }
            }
        }



        //left
        if (KEY_CODE == 37) {
            //seek left
            var wwidth = $("#PlaybackStatus1").width() - 7;
            if( wwidth > 0)
            {
                $("#PlaybackStatus1").width(wwidth);
                changePlaybackStatus_Duration(wwidth);
            }
        }

        //right
        if (KEY_CODE == 39) {
            //seek right
            var wwidth = $("#PlaybackStatus1").width() + 7;
            if(wwidth < $("#PlaybackStatusInnrCont1").width())
            {
                $("#PlaybackStatus1").width(wwidth);
                changePlaybackStatus_Duration(wwidth);
            }
        }




        //CNTRL
        if (KEY_CODE == 17) {
            StartVoiceCommand();
        }


    }




    
    setInterval(function(){checkSound();}, 3000);

    function checkSound()
    {
        if(LOCK_SOUND)
        {
            return;
        }

        if(window.speechSynthesis.speaking == false)
        {
            player.setVolume(85); //will need to modify to back real volume
        }
    }
    





    function HandleCurrAction()
    {
        var isActionExecuted = false;

        switch(CURR_ACTION)
        {
            case "ADD_TO_PLAYLIST":
                SubmitAddToMyDefaultPlaylist();
                 CURR_ACTION = "";
                 isActionExecuted = true;
                break;
            case "DEL_FROM_PLAYLIST":
                SubmitDeleteFromMyPlaylist();
                 CURR_ACTION = "";
                 isActionExecuted = true;
                break;
            default:
                break;   
        }

        return isActionExecuted;
    }





    function clickBack(){
        if (is_speech_sound == 1) {
            window.speechSynthesis.cancel();
        }

        //window.history.back();

        @if(ViewBag.BA != null)
        {
            <text>
                window.location = "@ViewBag.BA";
            </text>
        }
        else
        {
            <text>
                window.location = "/black/srhome/step_2";
            </text>
        }

    }




    function AddToMyPlaylist()
    {
        player.setVolume(20); //will need to bring back
        LOCK_SOUND = true;

        //add to my palylist
        //
        if (is_speech_sound == 1) {
            var curr_msg = new SpeechSynthesisUtterance("Add to my playlist");
            window.speechSynthesis.speak(curr_msg);
        }

        $.ajax({
            type: "POST",
            url: "/black/srAccount/AddToMyPlaylist/" + items_arr[CURR_VIDEO],
            async: true,
            success: function (data) {
                $("#MyPlaylist_Actions_CH1").html(data);
            }
        });

        CURR_ACTION = "ADD_TO_PLAYLIST";
    }


    function DeleteFromMyPlaylist()
    {
        player.setVolume(20); //will need to bring back
        LOCK_SOUND = true;

        //add to my palylist
        //
        if (is_speech_sound == 1) {
            var curr_msg = new SpeechSynthesisUtterance("Delete from my playlist");
            window.speechSynthesis.speak(curr_msg);
        }

            
        $.ajax({
            type: "POST",
            url: "/black/srAccount/DeleteFromMyPlaylist/" + $("#PlItem_" + CURR_VIDEO).find(":hidden").last().val(),
            async: true,
            success: function (data) {
                $("#MyPlaylist_Actions_CH1").html(data);
            }
        });

        CURR_ACTION = "DEL_FROM_PLAYLIST";
    }







    function StartVoiceCommand() {
        
        DisplayMicIcon();    


        if (is_speech_sound == 1) {
            window.speechSynthesis.cancel();
            var search_msg = new SpeechSynthesisUtterance("say");
            window.speechSynthesis.speak(search_msg);
        }


        setTimeout(function () {
            var recognition = new webkitSpeechRecognition();
            //recognition.continuous = true;
            //recognition.interimResults = true;
            recognition.lang = "en-US";
            recognition.onresult = function (event) {

                var curr_speech = event.results[0][0];
                console.log(event.results[0][0].transcript)

                ProccessVoiceCommand(event.results[0][0].transcript);

            }
            recognition.start();
        }, 300);
    }



    function ProccessVoiceCommand(comm) {

        //alert(comm);

        switch(comm.toLowerCase())
        {
            case "add to my playlist":
            case "add to playlist":
            case "add":
                AddToMyPlaylist();
                break;
            case "delete from my playlist":
            case "delete from playlist":
            case "delete":
                DeleteFromMyPlaylist();
                break;
            case "skip":
            case "next":
            case "next song":
                PlayNextVideo();
                break;
            case "back":
            case "prev":
            case "previous":
            case "go back":
                PlayPrevVideo();
                break;
            case "pause":
            case "stop":
                PauseVideo();
                break;
            case "volume":
                break;
            case "mute":
            case "mute sound":
                MuteSound();
                break;
            case "play":
                PlayVideo();
                break;
            case "go home":
            case "home":
                hvc_NavigateHome();
                break;
            default:
                if (is_speech_sound == 1) {
                    window.speechSynthesis.cancel();
                    var not_found_msg = new SpeechSynthesisUtterance("Please say again...");
                    window.speechSynthesis.speak(not_found_msg);
                }
                break;
        }

    }




</script>













<div style=" position:relative; top:10px; left:0px; width:180px; height:180px; border-radius:150px; background-color:#CDCDCD;"> 
    
    <div onclick="clickBack()" style=" float:left; width:100%; margin:60px 0 0 60px; cursor:pointer; ">
        BACK
    </div>

</div>




<div style=" position:relative; top:-150px; left:10px; width:780px; height:780px; border-radius:450px; background-color:#CDCDCD;">


    <div class="MainNHypPlayer" style=" margin:180px 0 0 85px;">
        <div class="MainRootCont">
            
 
            <div id="MainContHolder">
                    
                    
                    <div class="MainPlayerHoder">
    
                        <div id="player"></div>

                        <div id="PlaybackStatusCont1" onmouseover="PSC_over()" onmouseout="PSC_out()" >
                            
                            <div id="PlaybackStatusInnrCont1"><div id="PlaybackStatus1"></div></div>

                        </div>



                        <div class="ControlBar">
            
                            <div id="Prev_btn" onclick="PlayPrevVideo();" title="Prev"></div>
                
                            <div id="PlPs_btn" onclick="PlayPauseVideo();" title="Play/Pause"></div>
            
                            <div id="Next_btn" onclick="PlayNextVideo();" title="Next"></div>

                            <div id="Shuffle_btn" onclick="ShuffleSongs();" title="Shuffle"></div>

                            <div id="Mute_btn_cont" onmouseover="SoundMouseOver();" onmouseout="SoundMouseOut();" title="Mute/Unmute">
                                <div id="Mute_btn" onclick="MuteSound();" title="Mute/Unmute"></div>
                                <div id="VolumeControl"><div id="VolumeControlVal"></div></div>
                            </div>





                            <div class="plrAddSongBtn" onclick="AddSong_CLICK()" style=" @if (User.Identity.IsAuthenticated == false){<text>display:none;</text>} " onmouseover="$('#addsngtxt').html('ADD SONG TO MY PLAYLIST');" onmouseout="$('#addsngtxt').html('ADD SONG');">
                                <div id="addsngtxt">ADD SONG</div>
                                <div id="AddNSongBtn" title="Add to playlist"></div>
                            </div>


                            
                            <div id="LikePlaylist" title="Like this playlist" style=" @if (User.Identity.IsAuthenticated == false){<text>display:none;</text>} @if (ViewBag.PlaylistLikes == null){<text>display:none;</text>}">
                        
                                <div>
                                    @using (Ajax.BeginForm("AddNewPlaylistLike", "playlist", new AjaxOptions { UpdateTargetId = "LikeNumContH", HttpMethod = "POST", OnComplete = "AddNewPlaylistLikeComplete" }))
                                    {
                                        <input id="PlstLikeBtn" type="submit" value="" title="Like & Save" style=" border:none; background-color:none;" />
                                        <input type="hidden" name="Playlist_ID" id="Playlist_ID" value="@ViewBag.PlaylistID" />
                                        <input type="hidden" name="Owner_ID" id="Owner_ID" value="@ViewBag.UserID" />
                                    }
                                </div>
                                
                            </div>


                        </div>

                    </div>



                    <div class="MainAdsHoder">


                    </div>

            </div>


            


        </div>
    </div>


 
    <div id="MyPlaylist_Actions_CH1" style=" float:left; width:100%;">
    </div>



</div>




<div style=" position:relative; top:-940px; left:700px; width:570px; height:570px; border-radius:300px; background-color:#CDCDCD;">
    
    <div class="MainNHypPlayer" style=" margin:75px 0 0 75px;">
        <div class="MainRootCont">
            <div id="MainContHolder">


                <div class="MainPlaylistHolder">
                    <div id="PlayerPlaylistHolder1">
                        @for (int i = 0; i < Model.songs_list.Count; i++)
                        {
                            <div id="PlItem_@i" class="playlistItemC">
                                <img alt="" src="//i.ytimg.com/vi/@Model.songs_list[i].YoutubeId/0.jpg" onclick="plVClick('@Model.songs_list[i].YoutubeId', @i)" />
                                <div id="songC_@i" class="songTtl" onclick="plVClick('@Model.songs_list[i].YoutubeId', @i)">@Model.songs_list[i].Title</div>
                                <input type="hidden" id="si_@Model.songs_list[i].YoutubeId" value="@Model.songs_list[i].id" />
                                <input type="hidden" id="psi_@Model.songs_list[i].YoutubeId" value="@Model.songs_list[i].playlist_track_id" />
                                <!--div id="songA_@i" class="skpSngBtn" onclick="skipSong(@i);">skip</div-->
                            </div>
                            
                            if (i == song_limit)
                            {
                                <div class="LoadMoreSongs_btn" onclick="LoadMoreSongsPlaylist()">Load More Songs...</div>
                                break;
                            }
                        }
                    </div>
                </div>



            </div>
        </div>
    </div>


</div>



<div class="Trans_BACK" id="HideBackDiv" onclick="Show_Content();"></div>
<div id="popupContainer"></div>



<div id="TraceTxt" style="display:none;"></div>
<div class="Trans_BACK" id="HideBackDiv_PopupPlayer" onclick="Show_Content_PopupPlayer();"></div>
<div id="popupContainer_PopupPlayer"></div>



















<script type="text/javascript">
    
    $(document).ready(function(){
        
        var tag = document.createElement('script');
        tag.src = "https://www.youtube.com/iframe_api";
        var firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
        
        /*if(is_API_Ready == true)
        {
            MY_onYouTubeIframeAPIReady();
        }*/


    });

    function onYouTubeIframeAPIReady() {
        //is_API_Ready = true;
        MY_onYouTubeIframeAPIReady();
    }
    

    
    //var tag = document.createElement('script');
    //tag.src = "https://www.youtube.com/iframe_api";
    //var firstScriptTag = document.getElementsByTagName('script')[0];
    //firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);


    PlbkBar_W = 599;
    volContBar_W = 43;

    curr_playlist_id = '@ViewBag.PlaylistID';
    curr_user_id = '@ViewBag.UserID';
    iua = '@User.Identity.IsAuthenticated';
    desc_length = '@ViewBag.DescLength';
    isNP = 'Y';



        
    function MY_onYouTubeIframeAPIReady() {
        
        player = new YT.Player('player', {
            width: '590',
            height: '340',
            @if (Model.songs_list.Count > 0)
            {
                <text>videoId: '@Model.songs_list[0].YoutubeId',</text>
            }
            playerVars: { 'autoplay': 0, 'controls': 0 },
            events: {
                'onReady': onPlayerReady
            }
        });
            

        PSC1 = document.getElementById("PlaybackStatusCont1");
        PSC1.addEventListener("click", changePlaybackStatus_Click, false);

        volCont1 = document.getElementById("VolumeControl");
        volCont1.addEventListener("click", VolumeControl_Click, false);

        @if (Model.songs_list.Count > 0)
        {
            <text>CURR_VIDEO = 0;</text>
        }
    }
        
   


    var isReady = false;
    function onPlayerReady(event) {
        if(isReady == false)
        {
            player.addEventListener("onStateChange", "onPlayerStateChange");
            player.addEventListener("onError", "onError");
            player.setVolume(85);

            plTimer = setInterval(function () { currentPlaybackState() }, 1000);


            @if (ViewBag.AUTO_PLAY != null && ViewBag.AUTO_PLAY == "0")
            {
            }
            else
            {
                <text>
                if (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Windows()) {
                    //m
                }
                else
                {
                    CURR_VIDEO = -1;
                    PlayNextVideo();
                }
                </text>
            }

            isReady = true;
            setTimeout(function(){SharesNum(); HistRec('@ViewBag.PlaylistName'); }, 3000);
        }
    }



    var items_arr = new Array();
    @for (int i = 0; i < Model.songs_list.Count; i++)
    {
        <text>items_arr[@i] = '@Model.songs_list[i].YoutubeId';</text>

        if (i == song_limit)
        {
            break;
        }
    }
    if(items_arr.length > 1)
    {
        $("#Prev_btn").css("display","block");
        $("#Next_btn").css("display","block");
        $("#Shuffle_btn").css("display","block");
    }
    else
    {
        $("#Prev_btn").css("display","none");
        $("#Next_btn").css("display","none");
        $("#Shuffle_btn").css("display","none");
    }


    function ShuffleSongs()
    {
        ShuffleSongsI(@ViewBag.UserID);
    }

</script>






    




<script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-28695705-1']);
    _gaq.push(['_trackPageview']);

    (function () {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
</script>





















